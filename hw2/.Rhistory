category <- 4
}else{
category <- 5
}
categories[i] <- category
}
return(categories)
}
find.category(sort(birthwt$bwt))
b <- boxplot(birthwt$bwt~birthwt$race,
col = c("blue", "yellow", "white"),
main = "BoxPlot of weight",
xlab = "RACE",
ylab = "Weight"
)
b$stats
b$out
plot(birthwt$race)
plot(birthwt$age, birthwt$bwt)
# for density we need to first assign an object as density, then plot it
d <- density(birthwt$bwt)
plot(d)
hist(birthwt$bwt)
hist(birthwt$bwt, breaks = 5)
# for advance plot use ggplot
library(ggplot2)
ggplot(data = birthwt, aes(x = bwt, y = age))
ggplot(data = birthwt, aes(x = bwt, y = age, col=race)+geom_point()
ggplot(data = birthwt, aes(x = bwt, y = age, col=race)+geom_point())
ggplot(data = birthwt, aes(x = bwt, y = age, col=race))+
geom_point()
View(mydata)
ggplot(data = birthwt, aes(x = bwt, y = age, col=race))+
geom_point()+
facet_wrap(~smoke)
xlab("AGE")
ggplot(data = birthwt, aes(x = bwt, y = age, col=race))+
geom_point()+
ylab("WEIGHT")
ggplot(data = birthwt, aes(x = bwt, y = age, col=race))+
geom_point()+
ylab("WEIGHT")+
xlab("AGE")+
facet_wrap(~smoke)
ggplot(data = birthwt, aes(x = bwt, y = age, col=race))+
geom_point()+
ylab("WEIGHT")+
xlab("AGE")+
facet_wrap(~smoke)+
theme_light()
ggplot(data = birthwt, aes(x = 1:length(age),y = age))+
geom_boxplot()
ggplot(data = birthwt, aes(x = 1:length(age),y = age))+
geom_boxplot()+
facet_wrap(~race)
plot.hist(birthwt, birthwt.age)
plot.hist <- function(d, attrib){
ggplot(data = d,aes(x= attrib))+ geom_histogram()
}
plot.hist(birthwt, birthwt.age)
plot.hist(birthwt, birthwt$age)
plot.hist <- function(d, attrib){
ggplot(data = d,aes(x= attrib))+ geom_histogram()
}
plot.hist(birthwt, birthwt$age)
plot.hist <- function(d, attrib){
ggplot(data = d,aes(x= attrib))+ geom_histogram()
}
plot.hist(birthwt, birthwt$age)
plot.hist <- function(d, attrib){
ggplot(data = d,aes(x= attrib))+ geom_histogram(color="red")
}
plot.hist(birthwt, birthwt$age)
plot.hist <- function(d, attrib){
ggplot(data = d,aes(x= attrib))+ geom_histogram(color="red", fill="white")
}
plot.hist(birthwt, birthwt$age)
plot.hist <- function(d, attrib){
co = c("white", "red", "yellow", "black","grey", "blue", "orange")
c = sample(1:length(co),1)
f = sample(1:length(co),1)
ggplot(data = d,aes(x= attrib))+ geom_histogram(color=co[c], fill=co[f])
}
plot.hist(birthwt, birthwt$age)
plot.hist(birthwt, birthwt$age)
plot.hist(birthwt, birthwt$age)
plot.hist(birthwt, birthwt$age)
plot.hist(birthwt, birthwt$age)
plot.hist <- function(d, attrib){
co = colors()
c = sample(1:length(co),1)
f = sample(1:length(co),1)
ggplot(data = d,aes(x= attrib))+ geom_histogram(color=co[c], fill=co[f])
}
plot.hist(birthwt, birthwt$age)
plot.hist(birthwt, birthwt$age)
plot.hist(birthwt, birthwt$age)
plot.hist(birthwt, birthwt$age)
plot.hist(birthwt, birthwt$age)
plot.hist(birthwt, birthwt$age)
library(MASS)
mydata <- birthwt
mydata <- birthwt
library(ggplot2)
colnames(mydata) <- c("birthwt.below.2500", "mother.age", "mother.weight",
"race", "mother.smokes", "previous.prem.labor", "hypertension", "uterine.irr",
"physician.visits", "birthwt.grams")
View(mydata)
library(plyr)
mydata <- transform(mydata,
race = as.factor(mapvalues(race, c(1, 2, 3), c("white", "black", "other"))),
mother.smokes = as.factor(mapvalues(mother.smokes, c(0,1), c("no", "yes"))),
hypertension = as.factor(mapvalues(hypertension, c(0,1), c("no", "yes"))),
uterine.irr = as.factor(mapvalues(uterine.irr, c(0,1), c("no", "yes"))),
birthwt.below.2500 = as.factor(mapvalues(birthwt.below.2500, c(0,1), c("no", "yes")))
)
attach(mydata)
ggplot(mydata, aes(x = mother.age, birthwt.grams))+ geom_point()
ggplot(mydata, aes(x = mother.weight, birthwt.grams))+ geom_point()
ggplot(mydata, aes(x = mother.smokes, birthwt.grams))+ geom_point()
ggplot(mydata, aes(x = mother.weight, birthwt.grams))+ geom_point()
ggplot(mydata, aes(x = mother.weight, birthwt.grams))+ geom_point(aes(color=factor(gear)))
ggplot(mydata, aes(x = mother.weight, birthwt.grams))+ geom_point(aes(color=factor(gear)))
ggplot(mydata, aes(x = mother.weight, birthwt.grams))+ geom_point(aes(color=factor("blue")))
str(mydata)
ggplot(mydata, aes(x = mother.weight, birthwt.grams))+ geom_point(aes(color=factor(birthwt.below.2500)))
ggplot(mydata, aes(x = mother.weight, birthwt.grams))+ geom_point()
ggplot(mydata, aes(x = mother.weight, birthwt.grams)) +
geom_point() +
stat_smooth(method = "lm")
ggplot(mydata, aes(x = mother.weight, birthwt.grams)) +
geom_point() +
stat_smooth(method = "lm",
col = "#C42126",
)
ggplot(mydata, aes(x = mother.weight, birthwt.grams)) +
geom_point() +
stat_smooth(method = "lm",
col = "#C42126",
se = FALSE,
)
ggplot(mydata, aes(x = mother.weight, birthwt.grams)) +
geom_point() +
stat_smooth(method = "lm",
col = "#C42126",
se = FALSE,
size = 1
)
cor(mother.weight, birthwt.grams)
n <- length(mother.weight)
r <- n*(sum(mother.weight, birthwt.grams))-(sum(mother.weight)*sum(birthwt.grams))/(
sqrt( ((n*sum(mother.weight^2))-(sum(mother.weight)^2))*
((n*sum(birthwt.grams^2))-(sum(birthwt.grams)^2))
)
)
mydata[NA,"mother.weight"]
mydata[NA,mydata$mother.weight]
mydata[,mydata$mother.weight==NA]
mydata[,is.na("mother.weight")]
mydata[is.na("mother.weight"),]
mydata[is.na("mother.weight"),"mother.weight"]
mydata[is.na("mother.weight"),mother.weight]
subset(mydata, is.na(mother.weight))
subset(mydata, is.na(birthwt.grams))
subset(mydata, mother.weight < 1500)
r <- n*(sum(mother.weight, birthwt.grams))-(sum(mother.weight)*sum(birthwt.grams))/(
sqrt( ((n*sum(mother.weight^2))-(sum(mother.weight)^2))*
((n*sum(birthwt.grams^2))-(sum(birthwt.grams)^2))
)
)
r
r <- n*(sum(mother.weight*birthwt.grams))-(sum(mother.weight)*sum(birthwt.grams))/(
sqrt( ((n*sum(mother.weight^2))-(sum(mother.weight)^2))*
((n*sum(birthwt.grams^2))-(sum(birthwt.grams)^2))
)
)
log2(0.2)
log2(0.8)
(0.2*log2(0.2))+(0.8*log2(0.8))
-1*(0.2*log2(0.2))+(0.8*log2(0.8))
-1*((0.2*log2(0.2))+(0.8*log2(0.8)))
entropy <- function(x, y){
-1*((x*log2(x))+(y*log2(y)))
}
entropy(0.2, 0.8)
entropy(6/9, 3/9)
library(MASS)
library(plyr)
library(ggplot2)
mydata <- birthwt
colnames(mydata) <-
c(
"birthwt.below.2500",
"mother.age",
"mother.weight",
"race",
"mother.smokes",
"previous.prem.labor",
"hypertension",
"uterine.irr",
"physician.visits",
"birthwt.grams"
)
mydata <- transform(
mydata,
race = as.factor(mapvalues(
race, c(1, 2, 3), c("white", "black", "other")
)),
mother.smokes = as.factor(mapvalues(mother.smokes, c(0, 1), c("no", "yes"))),
hypertension = as.factor(mapvalues(hypertension, c(0, 1), c("no", "yes"))),
uterine.irr = as.factor(mapvalues(uterine.irr, c(0, 1), c("no", "yes"))),
birthwt.below.2500 = as.factor(mapvalues(
birthwt.below.2500, c(0, 1), c("no", "yes")
))
)
correlation.analyzer <- function(data, x, y) {
print(
ggplot(data = data, aes(x = x, y = y)) +
geom_point(color = 'blue') +
geom_smooth(
method = lm,
se
= FALSE,
fullrange = TRUE,
col = "#C42126"
)
)
cor.val <- cor(x, y, method = 'pearson')
if (cor.val > 0.7) {
result <- "Strong Positive Relationship"
} else if (cor.val > 0.3) {
result <- "Moderate Positive Relationship"
} else if (cor.val > 0) {
result <- "Weak Positive Relationship"
} else if (cor.val > -0.3) {
result <- "Weak Negative Relationship"
} else if (cor.val > -0.7) {
result <- "Moderate Negative Relationship"
} else if (cor.val >= -1) {
result <- "Strong Negative Relationship"
}
return(cat(
paste(
" The Correlation Coefficient: ",
cor.val,
"\n",
"Evaluation Result: ",
result,
"\n",
sep = " "
)
))
}
correlation.analyzer(mydata, mydata$mother.weight, mydata$birthwt.grams)
data("cars")
correlation.analyzer(cars, cars$speed, cars$dist)
library(MASS)
library(plyr)
library(ggplot2)
mydata <- birthwt
colnames(mydata) <-
c(
"birthwt.below.2500",
"mother.age",
"mother.weight",
"race",
"mother.smokes",
"previous.prem.labor",
"hypertension",
"uterine.irr",
"physician.visits",
"birthwt.grams"
)
mydata <- transform(
mydata,
race = as.factor(mapvalues(
race, c(1, 2, 3), c("white", "black", "other")
)),
mother.smokes = as.factor(mapvalues(mother.smokes, c(0, 1), c("no", "yes"))),
hypertension = as.factor(mapvalues(hypertension, c(0, 1), c("no", "yes"))),
uterine.irr = as.factor(mapvalues(uterine.irr, c(0, 1), c("no", "yes"))),
birthwt.below.2500 = as.factor(mapvalues(
birthwt.below.2500, c(0, 1), c("no", "yes")
))
)
correlation.analyzer <- function(data, x, y) {
print(
ggplot(data = data, aes(x = x, y = y)) +
geom_point(color = 'blue') +
geom_smooth(
method = lm,
se
= FALSE,
fullrange = TRUE,
col = "#C42126"
)
)
cor.val <- cor(x, y, method = 'pearson')
if (cor.val > 0.7) {
result <- "Strong Positive Relationship"
} else if (cor.val > 0.3) {
result <- "Moderate Positive Relationship"
} else if (cor.val > 0) {
result <- "Weak Positive Relationship"
} else if (cor.val > -0.3) {
result <- "Weak Negative Relationship"
} else if (cor.val > -0.7) {
result <- "Moderate Negative Relationship"
} else if (cor.val >= -1) {
result <- "Strong Negative Relationship"
}
return(cat(
paste(
" The Correlation Coefficient: ",
cor.val,
"\n",
"Evaluation Result: ",
result,
"\n",
sep = " "
)
))
}
correlation.analyzer(mydata, mydata$momother.age, mydata$mother.weight)
data("cars")
correlation.analyzer(cars, cars$speed, cars$dist)
library(MASS)
library(plyr)
library(ggplot2)
mydata <- birthwt
colnames(mydata) <-
c(
"birthwt.below.2500",
"mother.age",
"mother.weight",
"race",
"mother.smokes",
"previous.prem.labor",
"hypertension",
"uterine.irr",
"physician.visits",
"birthwt.grams"
)
mydata <- transform(
mydata,
race = as.factor(mapvalues(
race, c(1, 2, 3), c("white", "black", "other")
)),
mother.smokes = as.factor(mapvalues(mother.smokes, c(0, 1), c("no", "yes"))),
hypertension = as.factor(mapvalues(hypertension, c(0, 1), c("no", "yes"))),
uterine.irr = as.factor(mapvalues(uterine.irr, c(0, 1), c("no", "yes"))),
birthwt.below.2500 = as.factor(mapvalues(
birthwt.below.2500, c(0, 1), c("no", "yes")
))
)
correlation.analyzer <- function(data, x, y) {
print(
ggplot(data = data, aes(x = x, y = y)) +
geom_point(color = 'blue') +
geom_smooth(
method = lm,
se
= FALSE,
fullrange = TRUE,
col = "#C42126"
)
)
cor.val <- cor(x, y, method = 'pearson')
if (cor.val > 0.7) {
result <- "Strong Positive Relationship"
} else if (cor.val > 0.3) {
result <- "Moderate Positive Relationship"
} else if (cor.val > 0) {
result <- "Weak Positive Relationship"
} else if (cor.val > -0.3) {
result <- "Weak Negative Relationship"
} else if (cor.val > -0.7) {
result <- "Moderate Negative Relationship"
} else if (cor.val >= -1) {
result <- "Strong Negative Relationship"
}
return(cat(
paste(
" The Correlation Coefficient: ",
cor.val,
"\n",
"Evaluation Result: ",
result,
"\n",
sep = " "
)
))
}
correlation.analyzer(mydata, mydata$momother.age, mydata$mother.weight)
#data("cars")
#correlation.analyzer(cars, cars$speed, cars$dist)
source('D:/University1/computer engineering/Third year/Sixth semester/Statistical Computing/Homework/CorrelationAnalyzer.r')
correlation.analyzer(mydata, mydata$mother.age, mydata$mother.weight)
correlation.analyzer(mydata, mydata$mother.age, mydata$mother.weight)
correlation.analyzer(mydata, mydata$mother.age, mydata$mother.weight)
(-7*0.2)+(-3*0.1)+(3*0.4)+(7*0.3)
(-7*0.2)+(-3*0.1)+(3*0.4)+(7*0.3)
(490*0.005)+(-10*0.995)
(15*0.3)+(-10*0.7)
(-5*0.2)+(0*0.4)+(5*0.4)
(-40*0.12)+(-30*0.04)+(-20*0.05)+(-10*0.17)
(-40*0.12)+(-30*0.04)+(-20*0.05)+(-10*0.17)
(50*0.02)
(-3*0.98)+(47*0.02)+
(-3*0.98)+(47*0.02)
(-3*0.98)
(47*0.02)
(47*0.02)
(-3*0.98)+(47*0.02)
(0.35*0)+(0.25*10)+(20*0.4)
(1*0.09)+(2*0.03)+(3*0.52)+(4*0.24)+(5*0.12)
(-50*0.99)+(0.01*2450)
(-1*0.45)+(1*0.3)+(2*0.2)
(-1*0.45)+(1*0.3)+(2*0.2)
(3*0.5)+(7*0.1)+(10*0.1)
(-10*0.95)+(290*0.05)
(-5*0.05)+(-300*0.95)
(-5*0.95)+(295*0.05)
(-5*0.95)+(295*0.05)
(1*0.42)+(2*0.09)
(1*0.5)+(2*0.25)+(3*0.25)
(1*0.5)+(2*0.25)+(3*0.25)
(1*0.07)+(2*0.02)+(3*0.01)
(1*0.5)+(2*0.15)+(3*0.05)
(1*0.5)+(2*0.15)+(3*0.05)
bw = 5000
n_obs = sum(!is.na(students.salary$salary))
students.salary <- students[!is.na(students$salary),]
library(ggplot2)
students <- read.csv("students.csv")
attach(students)
head(students)
library(ggplot2)
students <- read.csv("students.csv")
library(ggplot2)
students <- read.csv("students.csv")
setwd("D:/University1/computer engineering/Third year/Sixth semester/Statistical Computing/Homework/hw2")
students <- read.csv("students.csv")
attach(students)
head(students)
students.salary <- students[!is.na(students$salary),]
# Set desired binwidth and number of non-missing obs
bw = 5000
n_obs = sum(!is.na(students.salary$salary))
g <- ggplot(students.salary, aes(x=salary)) +
geom_histogram(aes(y=..density..), binwidth = bw, colour="black", fill="green")+
stat_function(fun=dnorm, args = list(mean = mean(students.salary$salary), sd = sd(students.salary$salary))) +
ggtitle("Students Salary Histogram and Normal Distribution")
ybreaks = seq(0,350,50)
## On primary axis and secondary axix
g + scale_y_continuous("Counts", breaks = round(ybreaks / (bw * n_obs),3), labels = ybreaks) +
scale_y_continuous("Density", sec.axis = sec_axis(
trans = ~ . * bw * n_obs, name = "Counts", breaks = ybreaks))
qqnorm(students.salary$salary, main = "Q-Q Plot of Students Salary")
qqline(students.salary$salary, col=3, lwd=2)
View(students.salary)
correlation.analyzer <- function(data, x, y) {
print(
ggplot(data = data, aes(x = x, y = y)) +
geom_point(color = 'blue') +
geom_smooth(
method = lm,
se
= FALSE,
fullrange = TRUE,
col = "#C42126"
)
)
cor.val <- cor(x, y, method = 'pearson')
if (cor.val > 0.7) {
result <- "Strong Positive Relationship"
} else if (cor.val > 0.3) {
result <- "Moderate Positive Relationship"
} else if (cor.val > 0) {
result <- "Weak Positive Relationship"
} else if (cor.val > -0.3) {
result <- "Weak Negative Relationship"
} else if (cor.val > -0.7) {
result <- "Moderate Negative Relationship"
} else if (cor.val >= -1) {
result <- "Strong Negative Relationship"
}
return(cat(
paste(
" The Correlation Coefficient: ",
cor.val,
"\n",
"Evaluation Result: ",
result,
"\n",
sep = " "
)
))
}
correlation.analyzer(students.salary,
students.salary$nc.score,
students.salary$salary
)
correlation.analyzer(students.salary,
students.salary$score1,
students.salary$salary
)
View(students.salary)
correlation.analyzer(students.salary,
students.salary$score2,
students.salary$salary
)
