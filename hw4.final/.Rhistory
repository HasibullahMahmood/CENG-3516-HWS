width=.1, # Width of the error bars
position=position_dodge(0.3))
Turkish <- subset(df, Vatandaslik=="Turk Uyruklu")
foreigner <- subset(df, Vatandaslik=="Yabanci Uyruklu")
# Calculating confidence interval for score of Turkish students
x <- t.test(Turkish$Score)$conf.int
x
# calculating confidence interval for score of foreigner-students
y <- t.test(foreigner$Score)$conf.int
y
students.score <- data.frame(Citizenship="Turk",
X_axis="score",
mean=mean(Turkish$Score),
lower=x[1],
upper=x[2])
students.score <- rbind(students.score, data.frame(Citizenship="Foreigner",
X_axis="score",
mean=mean(foreigner$Score),
lower=y[1],
upper=y[2]))
ggplot(students.score, aes(x=X_axis, y=mean, fill=Citizenship)) +
geom_bar(position="dodge", stat="identity", width = 0.3) +
geom_errorbar(aes(ymin=lower, ymax=upper),
width=.1, # Width of the error bars
position=position_dodge(0.3))
shapiro.test(males$Score)
qqnorm(males$Score, ylab = "Males score")
qqline(males$Score)
t.test(males$Score,
alternative = "two.sided",
mu=75,
conf.level = 0.95)
# Create boxplot showing how score varies based on gender
qplot(x = Cinsiyet, y = Score,
geom = "boxplot", data = df,
xlab = "Gender",
ylab = "Score",
fill = I("lightblue"))
aggregate(Score ~ Cinsiyet,
data = df,
FUN = function(x) {c(mean = mean(x),
se = sd(x) / sqrt(length(x)))})
# Density plots
qplot(fill = Cinsiyet,
x = Score,
data = df,
geom = "density",
alpha = I(0.5),
adjust = 2
)
x <- subset(df, Cinsiyet=="Erkek")$Score
y <- subset(df, Cinsiyet=="Kadin")$Score
var.test(x, y)
shapiro.test(females$Score)
qqnorm(females$Score, ylab = "Females score")
qqline(females$Score)
t.test(x=x, y=y, alternative = "two.sided", var.equal = TRUE,
conf.level = 0.95)
# Create boxplot showing how score varies based on citizenship
qplot(x = Vatandaslik, y = Score,
geom = "boxplot", data = df,
xlab = "Citizenship",
ylab = "Score",
fill = I("lightblue"))
aggregate(Score ~ Vatandaslik,
data = df,
FUN = function(x) {c(mean = mean(x),
se = sd(x) / sqrt(length(x)))})
# Density plots
qplot(fill = Vatandaslik,
x = Score,
data = df,
geom = "density",
alpha = I(0.5),
adjust = 2
)
x <- subset(df, Vatandaslik=="Turk Uyruklu")$Score
y <- subset(df, Vatandaslik=="Yabanci Uyruklu")$Score
var.test(x, y)
shapiro.test(Turkish$Score)
qqnorm(Turkish$Score, ylab = "Turkish students score")
qqline(Turkish$Score)
shapiro.test(foreigner$Score)
qqnorm(foreigner$Score, ylab = "Foreigner-students scores")
qqline(foreigner$Score)
t.test(x=x, y=y, alternative = "two.sided", var.equal = TRUE,
conf.level = 0.95)
data <- df[, c(2, 6)]
names(data) <- c("score", "class")
# Show a random sample
set.seed(1234)
dplyr::sample_n(data, 10)
# Show the levels
levels(data$class)
# Compute summary statistics by class - count, mean, sd:
group_by(data, class) %>%
summarise(
count = n(),
mean = mean(score, na.rm = TRUE),
sd = sd(score, na.rm = TRUE)
)
ggplot(data=data, aes(x=class, y=score, fill= class)) +
geom_boxplot() +
labs(title = "Students Score based on Class Boxplot", x = "Class", y="Score") +
stat_summary(fun=mean, geom="point", shape=4, size=2) +
theme(axis.text.x=element_text(angle=-45,hjust=0,vjust=0))
shapiro.test(data[data$class=="1", 1])
shapiro.test(data[data$class=="2", 1])
shapiro.test(data[data$class=="3", 1])
shapiro.test(data[data$class=="4", 1])
qqnorm(data[data$class=="3", 1], ylab = "3th Class Score")
qqline(data[data$class=="3", 1])
qqnorm(data[data$class=="4", 1], ylab = "4th Class Score")
qqline(data[data$class=="4", 1])
bartlett.test(score~class, data=data)
model<-aov(score~class, data=data)
summary(model)
rm(age.df, classes, data, females, foreigner, males, students.score, Turkish, x, y)
View(df)
# Get relevant columns
reg.df <- df[, c(4, 5, 6, 7, 19, 2)]
View(reg.df)
# convert age and class to numeric type
reg.df$age <- as.numeric(reg.df$age)
# Get relevant columns
reg.df <- df[, c(4, 5, 6, 7, 19, 2)]
View(reg.df)
View(reg.df)
# convert age and class to numeric type
reg.df$age <- as.numeric(as.character(reg.df$age))
View(reg.df)
reg.df$Sinif <- as.numeric(as.character(reg.df$Sinif))
head(reg.df)
# correlation for class, age and score
cor(reg.df[,c(3, 5, 6)])
plot(reg.df[,c(3, 5, 6)])
# correlation for class, age and score
cor(reg.df[,c(3, 5, 6)])
plot(reg.df[,c(3, 5, 6)])
ggpairs(reg.df, cardinality_threshold=30)
# Fitting Multiple Linear Regression to the Training set
model = lm(formula = Score ~ .,
data = reg.df)
summary(model)
vif(model)
reduced.model<-step(model)
summary(reduced.model)
test <- data.frame(Cinsiyet <- c("Kadin"),
Fakulte <- c("Muhendislik Fakultesi"),
Sinif <- c("3"),
Vatandaslik <- c("Turk Uyruklu"),
age <- c("22"))
View(test)
test <- data.frame("Cinsiyet" <- c("Kadin"),
"Fakulte" <- c("Muhendislik Fakultesi"),
"Sinif" <- c("3"),
"Vatandaslik" <- c("Turk Uyruklu"),
"age" <- c("22"))
View(test)
test <- data.frame("Cinsiyet" <- "Kadin",
"Fakulte" <- "Muhendislik Fakultesi",
"Sinif" <- "3",
"Vatandaslik" <- "Turk Uyruklu",
"age" <- "22")
View(test)
View(test)
test <- data.frame(Cinsiyet <- "Kadin",
Fakulte <- "Muhendislik Fakultesi",
Sinif <- "3",
Vatandaslik <- "Turk Uyruklu",
age <- "22")
test <- data.frame(gender <- "Kadin",
faculty <- "Muhendislik Fakultesi",
class <- "3",
citizenship <- "Turk Uyruklu",
age <- "22")
rm(test)
test <- data.frame(gender <- "Kadin",
faculty <- "Muhendislik Fakultesi",
class <- "3",
citizenship <- "Turk Uyruklu",
age <- "22")
test <- data.frame(gender <- c("Kadin"),
faculty <- c("Muhendislik Fakultesi"),
class <- c("3"),
citizenship <- c("Turk Uyruklu"),
age <- c("22"))
predict(reduced.model, test)
test <- data.frame(gender <- c("Kadin"),
faculty <- c("Muhendislik Fakultesi"),
class <- c(3),
citizenship <- c("Turk Uyruklu"),
age <- c(22))
predict(reduced.model, test)
test <- data.frame(gender <- c("Kadin"),
faculty <- c("Muhendislik Fakultesi"),
class <- c(3),
citizenship <- c("Turk Uyruklu"),
age <- c(22))
predict(reduced.model, test)
test <- data.frame(gender <- c("Kadin"),
faculty <- c("Muhendislik Fakultesi"),
class <- c(3),
citizenship <- c("Turk Uyruklu"),
age <- c(22))
test <- data.frame(gender = c("Kadin"),
faculty = c("Muhendislik Fakultesi"),
class = c(3),
citizenship = c("Turk Uyruklu"),
age = c(22))
test <- data.frame(as.factor(gender = c("Kadin")),
as.factor(faculty = c("Muhendislik Fakultesi")),
as.numeric(class = c(3)),
as.factor(citizenship = c("Turk Uyruklu")),
as.numeric(age = c(22)))
test <- data.frame(as.factor(gender = c("Kadin")),
as.factor(faculty = c("Muhendislik Fakultesi")),
as.numeric(class = c(3)),
as.factor(citizenship = c("Turk Uyruklu")),
as.numeric(age = c(22)))
test$gender <- as.factor(test$gender)
test$faculty <- as.factor(test$faculty)
test$citizenship <- as.factor(test$citizenship)
predict(reduced.model, test)
test$class <- as.numeric(test$class)
test$citizenship <- as.factor(test$citizenship)
predict(reduced.model, test)
View(test)
test <- data.frame(gender = c("Kadin"),
faculty = c("Muhendislik Fakultesi"),
class = c(3),
citizenship = c("Turk Uyruklu"),
age = c(22))
test$gender <- as.factor(test$gender)
test$faculty <- as.factor(test$faculty)
test$class <- as.numeric(test$class)
test$citizenship <- as.factor(test$citizenship)
test$age <- as.numeric(test$age)
predict(reduced.model, test)
View(test)
View(test)
test <- data.frame(gender = c("Kadin"),
faculty = c("Muhendislik Fakultesi"),
class = c("3"),
citizenship = c("Turk Uyruklu"),
age = c("22"))
test$gender <- as.factor(test$gender)
test$faculty <- as.factor(test$faculty)
test$class <- as.numeric(test$class)
test$citizenship <- as.factor(test$citizenship)
test$age <- as.numeric(test$age)
predict(reduced.model, test)
predict(model, test)
predict(reduced.model, as.data.frame(gender = c("Kadin"),
faculty = c("Muhendislik Fakultesi"),
class = c("3"),
citizenship = c("Turk Uyruklu"),
age = c("22")))
test <- data.frame(gender = c("Kadin"),
faculty = c("Muhendislik Fakultesi"),
class = c("3"),
citizenship = c("Turk Uyruklu"),
age = c("22"))
View(test)
test$gender <- as.factor(test$gender)
test$faculty <- as.factor(test$faculty)
test$class <- as.numeric(test$class)
test$citizenship <- as.factor(test$citizenship)
test$age <- as.numeric(test$age)
predict(reduced.model, test)
setwd("D:/University1/computer engineering/Third year/Sixth semester/Statistical Computing/Homework/hw4.final")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(GGally)
library(car)
df <- read.csv('data.csv')
head(df, n=3)
summary(df$Score)
ggplot(data=df, aes(x=Score)) +
geom_bar(fill="blue", alpha=0.7)+
labs(title = "Quiz Score BarChart", x="Score", y="Count")
summary(df[df$Cinsiyet=="Erkek", 2])
summary(df[df$Cinsiyet=="Kadin", 2])
ggplot(data=df, aes(x=Cinsiyet, y=Score, fill= Cinsiyet)) +
geom_boxplot() +
labs(title = "Students score based on gender Boxplot", x = "Gender", y="Score") +
stat_summary(fun=mean, geom="point", shape=4, size=2)
# Cast data-type of gender to factor(nominal)
df$Cinsiyet <- as.factor(df$Cinsiyet)
# Print summary of gender
summary(df$Cinsiyet)
# Cast data-type of Faculty to factor(nominal)
df$Fakulte <- as.factor(df$Fakulte)
# Print summary of Faculty
summary(df$Fakulte)
# Graph
ggplot(df, aes(x=Fakulte, fill=Cinsiyet))+
geom_bar() +
labs(title = "Students Faculty based on Gender BarChart",x= "Faculty",y= "Count") +
theme(axis.text.x=element_text(angle=-45,hjust=0,vjust=0))
ggplot(data=df, aes(x=Fakulte, y=Score, fill= Fakulte)) +
geom_boxplot() +
labs(title = "Students score based on faculty Boxplot", x = "Faculty", y="Score") +
stat_summary(fun=mean, geom="point", shape=4, size=2) +
theme(axis.text.x=element_text(angle=-45,hjust=0,vjust=0))
classes <- data.frame(table(df$Sinif))
names(classes) <- c("class", "freq")
classes
ggplot(classes, aes(x=class, y=freq, fill=class))+
geom_bar(stat = "identity") +
labs(title = "Students class BarChart", x="Class", y="Response")
df$Sinif <- as.factor(df$Sinif)
ggplot(data=df, aes(x=Sinif, y=Score, fill= Sinif)) +
geom_boxplot() +
labs(title = "Students score based on class Boxplot", x = "Class", y="Score") +
stat_summary(fun=mean, geom="point", shape=4, size=2) +
theme(axis.text.x=element_text(angle=-45,hjust=0,vjust=0))
df$Vatandaslik <- as.factor(df$Vatandaslik)
summary(df$Vatandaslik)
ggplot(data=df, aes(x=Vatandaslik, y=Score, fill= Vatandaslik)) +
geom_boxplot() +
labs(title = "Students score based on Citizenship Boxplot", x="Citizenship", y="Score") +
stat_summary(fun=mean, geom="point", shape=4, size=2) +
theme(axis.text.x=element_text(angle=-45,hjust=0,vjust=0))
# Extracting year from date
df$Dogum.Tarihi <- as.Date(df$Dogum.Tarihi, "%m/%d/%Y")
df$age <- as.numeric(format(df$Dogum.Tarihi, "%Y"))
df$age <- 2020 - df$age
age.df <- data.frame(table(df$age))
names(age.df) <- c("age", "freq")
age.df
ggplot(age.df, aes(x=age, y=freq, fill=age))+
geom_bar(stat = "identity") +
labs(title = "Students Age BarChart", x="Age", y="n.response")
df$age <- as.factor(df$age)
ggplot(data=df, aes(x=age, y=Score, fill= age)) +
geom_boxplot() +
labs(title = "Students score based on Age Boxplot", x="Age", y="Score") +
stat_summary(fun=mean, geom="point", shape=4, size=2) +
theme(axis.text.x=element_text(angle=-45,hjust=0,vjust=0))
var(df[df$age=="27", 2])
males <- subset(df, Cinsiyet=="Erkek")
females <- subset(df, Cinsiyet=="Kadin")
# Calculating confidence interval for score of male students
x <- t.test(males$Score)$conf.int
x
# calculating confidence interval for females score
y <- t.test(females$Score)$conf.int
y
students.score <- data.frame(gender="Male",
scoreType="score",
mean=mean(males$Score),
lower=x[1],
upper=x[2])
students.score <- rbind(students.score, data.frame(gender="Female",
scoreType="score",
mean=mean(females$Score),
lower=y[1],
upper=y[2]))
ggplot(students.score, aes(x=scoreType, y=mean, fill=gender)) +
geom_bar(position="dodge", stat="identity", width = 0.3) +
geom_errorbar(aes(ymin=lower, ymax=upper),
width=.1, # Width of the error bars
position=position_dodge(0.3))
Turkish <- subset(df, Vatandaslik=="Turk Uyruklu")
foreigner <- subset(df, Vatandaslik=="Yabanci Uyruklu")
# Calculating confidence interval for score of Turkish students
x <- t.test(Turkish$Score)$conf.int
x
# calculating confidence interval for score of foreigner-students
y <- t.test(foreigner$Score)$conf.int
y
students.score <- data.frame(Citizenship="Turk",
X_axis="score",
mean=mean(Turkish$Score),
lower=x[1],
upper=x[2])
students.score <- rbind(students.score, data.frame(Citizenship="Foreigner",
X_axis="score",
mean=mean(foreigner$Score),
lower=y[1],
upper=y[2]))
ggplot(students.score, aes(x=X_axis, y=mean, fill=Citizenship)) +
geom_bar(position="dodge", stat="identity", width = 0.3) +
geom_errorbar(aes(ymin=lower, ymax=upper),
width=.1, # Width of the error bars
position=position_dodge(0.3))
shapiro.test(males$Score)
qqnorm(males$Score, ylab = "Males score")
qqline(males$Score)
t.test(males$Score,
alternative = "two.sided",
mu=75,
conf.level = 0.95)
# Create boxplot showing how score varies based on gender
qplot(x = Cinsiyet, y = Score,
geom = "boxplot", data = df,
xlab = "Gender",
ylab = "Score",
fill = I("lightblue"))
aggregate(Score ~ Cinsiyet,
data = df,
FUN = function(x) {c(mean = mean(x),
se = sd(x) / sqrt(length(x)))})
# Density plots
qplot(fill = Cinsiyet,
x = Score,
data = df,
geom = "density",
alpha = I(0.5),
adjust = 2
)
x <- subset(df, Cinsiyet=="Erkek")$Score
y <- subset(df, Cinsiyet=="Kadin")$Score
var.test(x, y)
shapiro.test(females$Score)
qqnorm(females$Score, ylab = "Females score")
qqline(females$Score)
t.test(x=x, y=y, alternative = "two.sided", var.equal = TRUE,
conf.level = 0.95)
# Create boxplot showing how score varies based on citizenship
qplot(x = Vatandaslik, y = Score,
geom = "boxplot", data = df,
xlab = "Citizenship",
ylab = "Score",
fill = I("lightblue"))
aggregate(Score ~ Vatandaslik,
data = df,
FUN = function(x) {c(mean = mean(x),
se = sd(x) / sqrt(length(x)))})
# Density plots
qplot(fill = Vatandaslik,
x = Score,
data = df,
geom = "density",
alpha = I(0.5),
adjust = 2
)
x <- subset(df, Vatandaslik=="Turk Uyruklu")$Score
y <- subset(df, Vatandaslik=="Yabanci Uyruklu")$Score
var.test(x, y)
shapiro.test(Turkish$Score)
qqnorm(Turkish$Score, ylab = "Turkish students score")
qqline(Turkish$Score)
shapiro.test(foreigner$Score)
qqnorm(foreigner$Score, ylab = "Foreigner-students scores")
qqline(foreigner$Score)
t.test(x=x, y=y, alternative = "two.sided", var.equal = TRUE,
conf.level = 0.95)
data <- df[, c(2, 6)]
names(data) <- c("score", "class")
# Show a random sample
set.seed(1234)
dplyr::sample_n(data, 10)
# Show the levels
levels(data$class)
# Compute summary statistics by class - count, mean, sd:
group_by(data, class) %>%
summarise(
count = n(),
mean = mean(score, na.rm = TRUE),
sd = sd(score, na.rm = TRUE)
)
ggplot(data=data, aes(x=class, y=score, fill= class)) +
geom_boxplot() +
labs(title = "Students Score based on Class Boxplot", x = "Class", y="Score") +
stat_summary(fun=mean, geom="point", shape=4, size=2) +
theme(axis.text.x=element_text(angle=-45,hjust=0,vjust=0))
shapiro.test(data[data$class=="1", 1])
shapiro.test(data[data$class=="2", 1])
shapiro.test(data[data$class=="3", 1])
shapiro.test(data[data$class=="4", 1])
qqnorm(data[data$class=="3", 1], ylab = "3th Class Score")
qqline(data[data$class=="3", 1])
qqnorm(data[data$class=="4", 1], ylab = "4th Class Score")
qqline(data[data$class=="4", 1])
bartlett.test(score~class, data=data)
model<-aov(score~class, data=data)
summary(model)
rm(age.df, classes, data, females, foreigner, males, students.score, Turkish, x, y)
# Get relevant columns
reg.df <- df[, c(4, 5, 6, 7, 19, 2)]
# convert age and class to numeric type
reg.df$age <- as.numeric(as.character(reg.df$age))
reg.df$Sinif <- as.numeric(as.character(reg.df$Sinif))
head(reg.df)
# correlation for class, age and score
cor(reg.df[,c(3, 5, 6)])
plot(reg.df[,c(3, 5, 6)])
ggpairs(reg.df, cardinality_threshold=30)
# Fitting Multiple Linear Regression to the Training set
model = lm(formula = Score ~ .,
data = reg.df)
summary(model)
vif(model)
reduced.model<-step(model)
summary(reduced.model)
# correlation for class, age and score
cor(reg.df[,c(3, 5, 6)])
View(model)
plot(reduced.model)
plot(reduced.model, which = 1)
plot(reduced.model, which = 2)
summary(reduced.model)$r.squared
summary(reduced.model)
View(model)
plot(reduced.model, which = 3 {
plot(reduced.model, which = 3)
plot(reduced.model, which = 4)
plot(reduced.model, which = 5)
plot(reduced.model, which = c(3, 5))
